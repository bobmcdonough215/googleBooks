{"version":3,"sources":["components/Jumbotron/index.js","components/Card/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/SearchForm/index.js","components/Book/index.js","components/Footer/index.js","pages/Search.js","pages/Saved.js","pages/noMatch.js","components/Navbar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","Card","icon","title","concat","aria-hidden","API","getBooks","q","axios","get","params","getSavedBooks","deleteBook","id","delete","saveBook","bookData","post","Container","fluid","Row","_ref2","Col","_ref3","size","split","map","join","List","ListItem","SearchForm","handleInputChange","handleFormSubmit","htmlFor","value","onChange","name","type","placeholder","onClick","Book","subtitle","authors","link","description","image","Button","target","rel","href","src","alt","Footer","Search","state","books","event","_event$target","_this","setState","Object","defineProperty","then","res","data","catch","message","preventDefault","handleSave","book","find","volumeInfo","imageLinks","thumbnail","infoLink","googleId","_this2","this","components_Jumbotron","components_Card","components_SearchForm","length","components_Book","key","authiors","components_Footer","Component","Saved","err","console","log","handleBookDelete","_id","noMatch","role","aria-label","NavBar","Fragment","react_router_dom","to","data-toggle","data-target","aria-controls","aria-expanded","App","Navbar","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.423d5b7e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\nfunction Card({icon, title, children}) {\n  return (\n    <div className=\"card mt-4\">\n      <div className=\"card-header\">\n        <h2><i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\n</h2>\n      </div>\n      <div className=\"card-body\">{children}</div>\n    </div>\n  );\n}\n\nexport default Card;","import axios from \"axios\";\n\nexport default {\n\n    \n  // Gets books from the Google API\n  getBooks: function(q) {\n    return axios.get(\"/api/google\", { params: { q: \"title:\" + q } });\n  },\n  // Gets all saved books\n  getSavedBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Deletes the saved book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves an book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm({q, handleInputChange, handleFormSubmit}) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search</label>\n        <input\n          value={q}\n          onChange={handleInputChange}\n          name=\"q\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"The Great Gatsby\"\n          id=\"Title\"\n        />\n        <button onClick={handleFormSubmit} type=\"submit\" className=\"btn btn-success\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;","import React from \"react\";\nimport { ListItem } from \"../List\";\nimport { Row, Col } from \"../Grid\";\nimport \"./style.css\";\n\nfunction Book({ title, subtitle, authors, link, description, image, Button }) {\n  return (\n    <ListItem>\n      <Row className=\"flex-wrap-reverse\">\n        <Col size=\"md-8\">\n          <h3 className=\"font-italic\">{title}</h3>\n          {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\n        </Col>\n        <Col size=\"md-4\">\n          <div className=\"btn-container\">\n            <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n              View\n            </a>\n            <Button />\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-6\">\n          <p className=\"font-italic small\">Written by {authors}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"12 sm-4 md-2\">\n          <img className=\"img-thumbnail img-fluid w-100\" src={image} alt={title} />\n        </Col>\n        <Col size=\"12 sm-8 md-10\">\n          <p>{description}</p>\n        </Col>\n      </Row>\n    </ListItem>\n  );\n}\n\nexport default Book;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Google Books Search built with React.js</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\nimport SearchForm from \"../components/SearchForm\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\n\nclass Search extends Component {\n  state = {\n    books: [],\n    q: \"\",\n\n  };\n\n\n  handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  getBooks = () => {\n    API.getBooks(this.state.q)\n      .then(res => this.setState({books: res.data }))\n      .catch(() =>\n      this.setState({\n        books:[],\n        message: \"No books found, try again\"\n      })\n      );\n  };\n\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.getBooks();\n  };\n\n  handleSave = id => {\n    const book = this.state.books.find(book => book.id === id);\n    API.saveBook({\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail,\n      link: book.volumeInfo.infoLink,\n      googleId: book.id\n    }).then(() => this.getBooks());\n  };\n\n  render() {\n    return (\n        <Container>\n          <Row>\n            <Col size=\"md-12\">\n              <Jumbotron>\n                <h1 className=\"text-center\"><strong>Google Books Search</strong></h1>\n              </Jumbotron>\n            </Col>\n            <Col size=\"md-12\">\n              <Card title=\"Book Search\" icon=\"<fas fa-book-reader\">\n              <SearchForm\n                  handleInputChange={this.handleInputChange}\n                  handleFormSubmit={this.handleFormSubmit}\n                  q={this.state.q}\n                />\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col size=\"md-12\">\n              <Card title=\"Results\">\n                {!this.state.books.length ? (\n                  <List>\n                    {this.state.books.map(book => (\n                      <Book\n                        key={book.id}\n                        title={book.volumeInfo.title}\n                        link={book.volumeInfo.infoLink}\n                        authors={book.volumeInfo.authiors.join(\", \")}\n                        description={book.volumeInfo.description}\n                        image={book.volumeInfo.imageLinks.thumbnail}\n                        Button={() => (\n                          <button\n                            onClick={() => this.handleSave(book.id)}\n                            className=\"btn btn-success ml-2\"\n                          >\n                            Save Book\n                          </button>\n                        )}\n                      />\n                    ))}\n                </List>\n              ) : (\n                <h2 className=\"text-center\">{this.state.message}</h2>\n              )}\n            </Card>\n            </Col>\n          </Row>\n          <Footer />\n        </Container>       \n         );\n      }\n    }\n    export default Search;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\nclass Saved extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    this.getSavedBooks();\n  }\n\n  getSavedBooks = () => {\n    API.getSavedBooks()\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleBookDelete = id => {\n    API.deleteBook(id).then(res => this.getSavedBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1 className=\"text-center\">\n                <strong>Google Books Search</strong>\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Saved Books\" icon=\"download\">\n              {this.state.books.length ? (\n                <List>\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book._id}\n                      title={book.title}\n                      subtitle={book.subtitle}\n                      link={book.link}\n                      authors={book.authors.join(\", \")}\n                      description={book.description}\n                      image={book.image}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookDelete(book._id)}\n                          className=\"btn btn-danger ml-2\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n              ) : (\n                <h2 className=\"text-center\">No Saved Books</h2>\n              )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Saved;","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction noMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default noMatch;\n","\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport \"./style.css\";\nconst NavBar = () => {\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <Link className=\"navbar-brand brand-title\" to=\"#\">\n          Google Books Search\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link heading-title\" to=\"/search\">\n                Search\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link heading-title\" to=\"/saved\">\n                Saved\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"../src/pages/Search\";\nimport Saved from \"../src/pages/Saved\";\nimport noMatch from \"./pages/noMatch\";\nimport Nav from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route component={noMatch} />\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}