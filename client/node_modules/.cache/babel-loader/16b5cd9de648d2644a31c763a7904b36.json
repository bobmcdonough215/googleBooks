{"ast":null,"code":"var _jsxFileName = \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/src/components/SearchForm/index.js\";\nimport React from \"react\";\nimport \"./style.css\"; // Using the datalist element we can create autofill suggestions based on the props.breeds array\n\nfunction SearchForm(_ref) {\n  var q = _ref.q,\n      handleInputChange = _ref.handleInputChange,\n      handleFormSubmit = _ref.handleFormSubmit;\n  return React.createElement(\"form\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"searcg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Breed Name:\"), React.createElement(\"input\", {\n    value: props.search,\n    onChange: props.handleInputChange,\n    name: \"breed\",\n    list: \"breeds\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Type in a dog breed to begin\",\n    id: \"breed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(\"datalist\", {\n    id: \"breeds\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.breeds.map(function (breed) {\n    return React.createElement(\"option\", {\n      value: breed,\n      key: breed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: props.handleFormSubmit,\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Search\")));\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/src/components/SearchForm/index.js"],"names":["React","SearchForm","q","handleInputChange","handleFormSubmit","props","search","breeds","map","breed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CAEA;;AACA,SAASC,UAAT,OAA8D;AAAA,MAAzCC,CAAyC,QAAzCA,CAAyC;AAAA,MAAtCC,iBAAsC,QAAtCA,iBAAsC;AAAA,MAAnBC,gBAAmB,QAAnBA,gBAAmB;AAC5D,SACE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,IAAA,KAAK,EAAEC,KAAK,CAACC,MADf;AAEE,IAAA,QAAQ,EAAED,KAAK,CAACF,iBAFlB;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,SAAS,EAAC,cANZ;AAOE,IAAA,WAAW,EAAC,8BAPd;AAQE,IAAA,EAAE,EAAC,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYE;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACrB;AAAQ,MAAA,KAAK,EAAEA,KAAf;AAAsB,MAAA,GAAG,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB;AAAA,GAAtB,CADH,CAZF,EAiBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEJ,KAAK,CAACD,gBAArC;AAAuD,IAAA,SAAS,EAAC,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,CADF,CADF;AAyBD;;AAED,eAAeH,UAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm({q, handleInputChange, handleFormSubmit}) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"searcg\">Breed Name:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"breed\"\n          list=\"breeds\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in a dog breed to begin\"\n          id=\"breed\"\n        />\n        <datalist id=\"breeds\">\n          {props.breeds.map(breed => (\n            <option value={breed} key={breed} />\n          ))}\n        </datalist>\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}