{"ast":null,"code":"import _classCallCheck from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"\",\n      breeds: [],\n      results: [],\n      error: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        search: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.getDogsOfBreed(_this.state.search).then(function (res) {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n\n        _this.setState({\n          results: res.data.message,\n          error: \"\"\n        });\n      }).catch(function (err) {\n        return _this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    // When the component mounts, get a list of all available base breeds and update this.state.breeds\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getBaseBreedsList().then(function (res) {\n        return _this2.setState({\n          breeds: res.data.message\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: {\n          minHeight: \"80%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Search By Breed!\"), React.createElement(Alert, {\n        type: \"danger\",\n        style: {\n          opacity: this.state.error ? 1 : 0,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.error), React.createElement(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleInputChange: this.handleInputChange,\n        breeds: this.state.breeds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(SearchResults, {\n        results: this.state.results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/src/pages/Search.js"],"names":["React","Component","Jumbotron","Card","Form","Book","Footer","Col","Row","Container","List","Search","state","search","breeds","results","error","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","API","getDogsOfBreed","then","res","data","status","Error","message","catch","err","getBaseBreedsList","console","log","minHeight","opacity","marginBottom"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,QAAqB,oBAArB;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,KAAK,EAAE;AAJD,K;;UAcRC,iB,GAAoB,UAAAC,KAAK,EAAI;AAC3B,YAAKC,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,K;;UAEDC,gB,GAAmB,UAAAJ,KAAK,EAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AACAC,MAAAA,GAAG,CAACC,cAAJ,CAAmB,MAAKb,KAAL,CAAWC,MAA9B,EACGa,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,OAAxB,EAAiC;AAC/B,gBAAM,IAAIC,KAAJ,CAAUH,GAAG,CAACC,IAAJ,CAASG,OAAnB,CAAN;AACD;;AACD,cAAKZ,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAEY,GAAG,CAACC,IAAJ,CAASG,OAApB;AAA6Bf,UAAAA,KAAK,EAAE;AAApC,SAAd;AACD,OANH,EAOGgB,KAPH,CAOS,UAAAC,GAAG;AAAA,eAAI,MAAKd,QAAL,CAAc;AAAEH,UAAAA,KAAK,EAAEiB,GAAG,CAACF;AAAb,SAAd,CAAJ;AAAA,OAPZ;AAQD,K;;;;;;;AArBD;wCACoB;AAAA;;AAClBP,MAAAA,GAAG,CAACU,iBAAJ,GACGR,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACR,QAAL,CAAc;AAAEL,UAAAA,MAAM,EAAEa,GAAG,CAACC,IAAJ,CAASG;AAAnB,SAAd,CAAJ;AAAA,OADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAJ;AAAA,OAFZ;AAGD;;;6BAiBQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEI,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWI,KAAX,GAAmB,CAAnB,GAAuB,CAAlC;AAAqCuB,UAAAA,YAAY,EAAE;AAAnD,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAK3B,KAAL,CAAWI,KAJd,CAFF,EAQE,oBAAC,UAAD;AACE,QAAA,gBAAgB,EAAE,KAAKM,gBADzB;AAEE,QAAA,iBAAiB,EAAE,KAAKL,iBAF1B;AAGE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWE,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAaE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF,CADF;AAmBD;;;;EAlDkBd,S;;AAqDrB,eAAeU,MAAf","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    breeds: [],\n    results: [],\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getBaseBreedsList()\n      .then(res => this.setState({ breeds: res.data.message }))\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getDogsOfBreed(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err.message }));\n  };\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">Search By Breed!</h1>\n          <Alert\n            type=\"danger\"\n            style={{ opacity: this.state.error ? 1 : 0, marginBottom: 10 }}\n          >\n            {this.state.error}\n          </Alert>\n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            breeds={this.state.breeds}\n          />\n          <SearchResults results={this.state.results} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}