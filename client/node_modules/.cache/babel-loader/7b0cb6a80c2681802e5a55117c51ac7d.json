{"ast":null,"code":"import _defineProperty from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/src/pages/Search/Search.js\";\nimport React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Jumbotron from \"../../components/Jumbotron\"; // import Card from \"../../components/Card\";\n\nimport API from \"../../utils/API\";\nimport { Container } from \"../../components/Grid\";\nimport { Form, FormBtn } from \"../../components/Form\";\nimport Book from \"../../components/Book\";\nimport Footer from \"../../components/Footer\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: \"\",\n      toResults: false,\n      results: []\n    };\n\n    _this.handleInputChange = function (event) {\n      // Destructure the name and value properties off of event.target\n      // Update the appropriate state\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.getBooks = function () {\n      API.getBooks(_this.state.q).then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function () {\n        return _this.setState({\n          books: [],\n          message: \"No books found, try again\"\n        });\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.getNewBooks(title).then(function (res) {\n        console.log(res.data.items);\n\n        _this.setState({\n          toResults: true,\n          results: res.data.items\n        });\n      });\n    };\n\n    _this.handleSave = function (id) {\n      var book = _this.state.books.find(function (book) {\n        return book.id === id;\n      });\n\n      API.saveBook({\n        title: book.volumeInfo.title,\n        authors: book.volumeInfo.authors,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks.thumbnail,\n        link: book.volumeInfo.infoLink,\n        googleId: book.id\n      }).then(function () {\n        return _this.getBooks();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Google Books Search\")), React.createElement(Link, {\n        className: \"btn btn-default btn-lg\",\n        to: \"/\",\n        role: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"New Search\"), React.createElement(Link, {\n        className: \"btn btn-default btn-lg\",\n        to: \"/saved\",\n        role: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Saved Books\")), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        label: \"Book Title\",\n        placeholder: \"The Great Gatsby\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        onClick: this.handleFormSubmit,\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Search\"))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/src/pages/Search/Search.js"],"names":["React","Component","Link","Redirect","Jumbotron","API","Container","Form","FormBtn","Book","Footer","Search","state","title","toResults","results","handleInputChange","event","target","name","value","setState","getBooks","q","then","res","books","data","catch","message","handleFormSubmit","preventDefault","getNewBooks","console","log","items","handleSave","id","book","find","saveBook","volumeInfo","authors","description","image","imageLinks","thumbnail","link","infoLink","googleId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\";\nimport Jumbotron from \"../../components/Jumbotron\";\n// import Card from \"../../components/Card\";\nimport API from \"../../utils/API\";\nimport { Container } from \"../../components/Grid\";\nimport {Form, FormBtn} from \"../../components/Form\";\nimport Book from \"../../components/Book\";\nimport Footer from \"../../components/Footer\";\n\n\nclass Search extends Component {\n  state = {\n    title: \"\",\n    toResults: false,\n    results: []\n\n  };\n\n\n  handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  getBooks = () => {\n    API.getBooks(this.state.q)\n      .then(res => this.setState({books: res.data }))\n      .catch(() =>\n      this.setState({\n        books:[],\n        message: \"No books found, try again\"\n      })\n      );\n  };\n\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getNewBooks(title)\n    .then(res => {\n      console.log(res.data.items);\n      this.setState({\n        toResults: true,\n        results: res.data.items\n      });\n    })\n  };\n\n  handleSave = id => {\n    const book = this.state.books.find(book => book.id === id);\n    API.saveBook({\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail,\n      link: book.volumeInfo.infoLink,\n      googleId: book.id\n    }).then(() => this.getBooks());\n  };\n\n  render() {\n    return (\n      <div>\n        <Jumbotron>\n          <h1 className=\"text-center\"><strong>Google Books Search</strong></h1>\n          <Link className=\"btn btn-default btn-lg\" to=\"/\" role=\"button\">New Search</Link>\n          <Link className=\"btn btn-default btn-lg\" to=\"/saved\" role=\"button\">Saved Books</Link>\n        </Jumbotron>\n        <Container>\n        <form>\n            <Input\n              value={this.state.title}\n              onChange={this.handleInputChange}\n              name=\"title\"\n              label=\"Book Title\"\n              placeholder=\"The Great Gatsby\"\n            />\n            <FormBtn         \n              onClick={this.handleFormSubmit}\n              className=\"btn btn-info\"\n            >\n              Search\n            </FormBtn>\n          </form>\n        </Container>\n      </div>\n    );\n  }\n}\n\n    export default Search;\n"]},"metadata":{},"sourceType":"module"}