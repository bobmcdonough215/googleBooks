{"ast":null,"code":"import _classCallCheck from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/src/pages/Results/Results.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Jumbotron from \"../../components/Jumbotron\";\nimport Card from \"../../components/Card\";\nimport { List, ListItem } from \"../../components/List\";\nimport ClickBtn from \"../../components/ClickBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\n\nvar Results =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Results, _Component);\n\n  function Results() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Results);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Results)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      target: \"\"\n    };\n\n    _this.saveBook = function (book) {\n      API.saveBook(book).then(function (res) {\n        var currentBooks = _this.state.books;\n        var filterBooks = currentBooks.filter(function (book) {\n          return book.id !== res.data.id;\n        });\n\n        _this.setState({\n          books: filterBooks\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Results, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data = this.props.location.data;\n\n      if (data && data.results.length > 0) {\n        this.setState({\n          books: data.results.filter(function (value, index) {\n            return index < 5;\n          }),\n          target: \"_blank\"\n        });\n      } else {\n        this.setState({\n          noResults: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    //   title: book.volumeInfo.title,\n    //   authors: book.volumeInfo.authors,\n    //   description: book.volumeInfo.description,\n    //   image: book.volumeInfo.imageLinks.thumbnail,\n    //   link: book.volumeInfo.infoLink,\n    //   googleId: book.id\n    // }).then(() => this.getBooks());\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.noResults) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Jumbotron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"display-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \" Google Books Search\"), React.createElement(\"hr\", {\n          className: \"my-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"lead\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: \"btn btn-default btn-lg\",\n          to: \"/\",\n          role: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"New Search\"), React.createElement(Link, {\n          className: \"btn btn-default btn-lg\",\n          to: \"/saved\",\n          role: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Saved Books\"))), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"No results - click here to search again.\")));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Google Books Search\")), React.createElement(Link, {\n        className: \"btn btn-default btn-lg\",\n        to: \"/\",\n        role: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"New Search\"), React.createElement(Link, {\n        className: \"btn btn-default btn-lg\",\n        to: \"/saved\",\n        role: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Saved Books\")), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Search Results\"), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.books.map(function (book, index) {\n        return React.createElement(ListItem, {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"date-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          key: \"\" + index + book.id,\n          href: book.volumeInfo.infoLink,\n          target: _this2.state.target,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, book.volumeInfo.title), book.volumeInfo.authors[0], book.volumeInfo.description, book.volumeInfo.imageLinks.thumbnail, React.createElement(ClickBtn, {\n          key: \"\" + book.id + index,\n          btntype: \"info\",\n          disabled: book.volumeInfo.infoLink === \"/\",\n          onClick: function onClick() {\n            return _this2.saveBook({\n              title: book.volumeInfo.title,\n              link: book.volumeInfo.infoLink,\n              authors: book.volumeInfo.authors.join(\", \"),\n              description: book.volumeInfo.description,\n              image: book.volumeInfo.imageLinks.thumbnail,\n              _id: book.id\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Save Book\")));\n      }))));\n    }\n  }]);\n\n  return Results;\n}(Component);\n\nexport default Results;","map":{"version":3,"sources":["/Users/robertmcdonough/Desktop/Homework/googleBooks/googleBooks/client/src/pages/Results/Results.js"],"names":["React","Component","Link","Jumbotron","Card","List","ListItem","ClickBtn","API","Col","Row","Container","Results","state","books","target","saveBook","book","then","res","currentBooks","filterBooks","filter","id","data","setState","catch","err","console","log","props","location","results","length","value","index","noResults","map","volumeInfo","infoLink","title","authors","description","imageLinks","thumbnail","link","join","image","_id"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,uBAApC;;IAGMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;UAoBVC,Q,GAAW,UAAAC,IAAI,EAAI;AACjBT,MAAAA,GAAG,CAACQ,QAAJ,CAAaC,IAAb,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAMC,YAAY,GAAG,MAAKP,KAAL,CAAWC,KAAhC;AACA,YAAMO,WAAW,GAAGD,YAAY,CAACE,MAAb,CAAoB,UAAAL,IAAI;AAAA,iBAAIA,IAAI,CAACM,EAAL,KAAYJ,GAAG,CAACK,IAAJ,CAASD,EAAzB;AAAA,SAAxB,CAApB;;AACA,cAAKE,QAAL,CAAc;AACZX,UAAAA,KAAK,EAAEO;AADK,SAAd;AAGD,OAPH,EAQGK,KARH,CAQS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OARZ;AASD,K;;;;;;;wCAzBqB;AAClB,UAAMH,IAAI,GAAG,KAAKM,KAAL,CAAWC,QAAX,CAAoBP,IAAjC;;AACA,UAAIA,IAAI,IAAIA,IAAI,CAACQ,OAAL,CAAaC,MAAb,GAAsB,CAAlC,EAAqC;AAErC,aAAKR,QAAL,CAAc;AACZX,UAAAA,KAAK,EAAEU,IAAI,CAACQ,OAAL,CAAaV,MAAb,CAAoB,UAACY,KAAD,EAAQC,KAAR;AAAA,mBAAkBA,KAAK,GAAG,CAA1B;AAAA,WAApB,CADK;AAEZpB,UAAAA,MAAM,EAAE;AAFI,SAAd;AAID,OANC,MAMG;AACH,aAAKU,QAAL,CAAc;AACZW,UAAAA,SAAS,EAAC;AADE,SAAd;AAGD;AACF;;;AAcC;AACA;AACA;AACA;AACA;AACA;AACA;6BAGM;AAAA;;AACJ,UAAI,KAAKvB,KAAL,CAAWuB,SAAf,EAA0B;AACxB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAyC,UAAA,EAAE,EAAC,GAA5C;AAAgD,UAAA,IAAI,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAyC,UAAA,EAAE,EAAC,QAA5C;AAAqD,UAAA,IAAI,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CAHF,CADF,EASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,CATF,CADF;AAeD;;AAGL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA5B,CADF,EAEE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAyC,QAAA,EAAE,EAAC,GAA5C;AAAgD,QAAA,IAAI,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAyC,QAAA,EAAE,EAAC,QAA5C;AAAqD,QAAA,IAAI,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADF,EAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKvB,KAAL,CAAWC,KAAX,CAAiBuB,GAAjB,CAAqB,UAACpB,IAAD,EAAOkB,KAAP;AAAA,eACpB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAElB,IAAI,CAACM,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,GAAG,EAAE,KAAKY,KAAL,GAAalB,IAAI,CAACM,EADzB;AAEE,UAAA,IAAI,EAAEN,IAAI,CAACqB,UAAL,CAAgBC,QAFxB;AAGE,UAAA,MAAM,EAAE,MAAI,CAAC1B,KAAL,CAAWE,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGE,IAAI,CAACqB,UAAL,CAAgBE,KALnB,CADF,EAQGvB,IAAI,CAACqB,UAAL,CAAgBG,OAAhB,CAAwB,CAAxB,CARH,EASGxB,IAAI,CAACqB,UAAL,CAAgBI,WATnB,EAUGzB,IAAI,CAACqB,UAAL,CAAgBK,UAAhB,CAA2BC,SAV9B,EAWE,oBAAC,QAAD;AACE,UAAA,GAAG,EAAE,KAAK3B,IAAI,CAACM,EAAV,GAAeY,KADtB;AAEE,UAAA,OAAO,EAAC,MAFV;AAGE,UAAA,QAAQ,EAAElB,IAAI,CAACqB,UAAL,CAAgBC,QAAhB,KAA6B,GAHzC;AAIE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACvB,QAAL,CAAc;AAC3BwB,cAAAA,KAAK,EAAEvB,IAAI,CAACqB,UAAL,CAAgBE,KADI;AAE3BK,cAAAA,IAAI,EAAE5B,IAAI,CAACqB,UAAL,CAAgBC,QAFK;AAG3BE,cAAAA,OAAO,EAAExB,IAAI,CAACqB,UAAL,CAAgBG,OAAhB,CAAwBK,IAAxB,CAA6B,IAA7B,CAHkB;AAI3BJ,cAAAA,WAAW,EAAEzB,IAAI,CAACqB,UAAL,CAAgBI,WAJF;AAK3BK,cAAAA,KAAK,EAAE9B,IAAI,CAACqB,UAAL,CAAgBK,UAAhB,CAA2BC,SALP;AAM3BI,cAAAA,GAAG,EAAE/B,IAAI,CAACM;AANiB,aAAd,CAAN;AAAA,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAXF,CADF,CADoB;AAAA,OAArB,CADH,CAFF,CANF,CADF;AA6Ce;;;;EA3GOtB,S;;AA8GtB,eAAeW,OAAf","sourcesContent":["\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Jumbotron from \"../../components/Jumbotron\";\nimport Card from \"../../components/Card\";\nimport { List, ListItem } from \"../../components/List\";\nimport ClickBtn from \"../../components/ClickBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\n\n\nclass Results extends Component {\n  state = {\n    books: [],\n    target: \"\",\n  };\n\n  componentDidMount() {\n    const data = this.props.location.data\n    if (data && data.results.length > 0) {\n\n    this.setState({\n      books: data.results.filter((value, index) => index < 5),\n      target: \"_blank\"\n    });\n  }else{\n    this.setState({\n      noResults:true\n    });\n  }\n}\n\nsaveBook = book => {\n  API.saveBook(book)\n    .then(res => {\n      const currentBooks = this.state.books;\n      const filterBooks = currentBooks.filter(book => book.id !== res.data.id);\n      this.setState({\n        books: filterBooks\n      });\n    })\n    .catch(err => console.log(err));\n}\n\n  //   title: book.volumeInfo.title,\n  //   authors: book.volumeInfo.authors,\n  //   description: book.volumeInfo.description,\n  //   image: book.volumeInfo.imageLinks.thumbnail,\n  //   link: book.volumeInfo.infoLink,\n  //   googleId: book.id\n  // }).then(() => this.getBooks());\n\n\nrender(){\n    if (this.state.noResults) {\n      return (\n        <div>\n          <Jumbotron>\n            <h1 className=\"display-4\"> Google Books Search</h1>\n            <hr className=\"my-4\" />\n            <p className=\"lead\">\n              <Link className=\"btn btn-default btn-lg\" to=\"/\" role=\"button\">New Search</Link>\n              <Link className=\"btn btn-default btn-lg\" to=\"/saved\" role=\"button\">Saved Books</Link>\n            </p>\n          </Jumbotron>\n          <Container>\n            <Link to=\"/\">No results - click here to search again.</Link>\n          </Container>\n        </div>\n      )\n    }\n\n\nreturn (\n  <div>\n    <Jumbotron>\n      <h1 className=\"text-center\"><strong>Google Books Search</strong></h1>\n      <Link className=\"btn btn-default btn-lg\" to=\"/\" role=\"button\">New Search</Link>\n      <Link className=\"btn btn-default btn-lg\" to=\"/saved\" role=\"button\">Saved Books</Link>\n    </Jumbotron>\n    <Container>\n      <h2>Search Results</h2>\n      <List>\n        {this.state.books.map((book, index) => (\n          <ListItem key={book.id}>\n            <div className=\"date-div\">\n              <a\n                key={\"\" + index + book.id}\n                href={book.volumeInfo.infoLink}\n                target={this.state.target}\n              >\n                {book.volumeInfo.title}\n              </a>\n              {book.volumeInfo.authors[0]}\n              {book.volumeInfo.description}\n              {book.volumeInfo.imageLinks.thumbnail}\n              <ClickBtn\n                key={\"\" + book.id + index}\n                btntype=\"info\"\n                disabled={book.volumeInfo.infoLink === \"/\"}\n                onClick={() => this.saveBook({\n                  title: book.volumeInfo.title,\n                  link: book.volumeInfo.infoLink,\n                  authors: book.volumeInfo.authors.join(\", \"),\n                  description: book.volumeInfo.description,\n                  image: book.volumeInfo.imageLinks.thumbnail,\n                  _id: book.id\n                })}\n              >\n                Save Book\n                  </ClickBtn>\n            </div>\n          </ListItem>\n        ))}\n      </List>\n    </Container>\n  </div>\n);\n              }\n            }\n\nexport default Results;\n\n"]},"metadata":{},"sourceType":"module"}